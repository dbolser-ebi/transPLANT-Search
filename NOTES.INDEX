
## INDEXING...

# Quit the script if *anything* fails!
set -o errexit # set -e

# Quit the script if we forget to initalize a variatble!
set -o nounset # set -u



## PICK YOUR SERVER (Solr version 4+)

#url=http://localhost:1234/solr         # V4.4

#url=http://ebi1-249:8983/solr          # V4.0
#url=http://ebi3-204:1234/solr          # V4.4

#url=http://pweb-2b:8045/solr           # V4.0-BETA
url=http://pweb-2b:8046/solr           # V4.4

## Define some options common to all dumps, and add softCommit so that
## we don't have to call commit every so often...
common_opt="separator=%09&softCommit=true"


## POINT AT THE INDEXES
#index_dir=Data/Indexes
#index_dir=/mnt/vbox-shared/TransPLANT_Indexes
index_dir=/nfs/production/panda/ensemblgenomes/data/Plants/TransPLANT/Indexes



## FIRST DELETE?

# ...

# The simple way to delete an index is (typically) just:
# rm -rf solr/<core>/data/



## INDEX EBI:
core=transPlant-EBI

for i in ${index_dir}/EBI/transplant2.dump.new; do
    echo $i
    
    OPT=${common_opt}
    OPT="${OPT}&fieldnames=id,obj_type,species,obj_desc,src_url"
    OPT="${OPT}&literal.provider=Ensembl+Plants"
    
    ## This fails (when provider = "EBI,Ensembl+Plants")
    #OPT="${OPT}&f.provider.split=true"
    #OPT="${OPT}&f.provider.separator=,"
    
    ## Nasty remapping...
    #OPT="${OPT}&f.obj_type.map=tRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=tRNA_pseudogene:ncRNA"
    #OPT="${OPT}&f.obj_type.map=miRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=ncRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=snoRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=rRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=snRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=:ncRNA"
    #OPT="${OPT}&f.obj_type.map=SRP_RNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=antisense:ncRNA"
    #OPT="${OPT}&f.obj_type.map=misc_RNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=P_RNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=RNase_MRP_RNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=tmRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=tRNA:ncRNA"
    #OPT="${OPT}&f.obj_type.map=tRNA:ncRNA"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'

done
echo; echo



## INDEX IPK
core=transPlant-IPK

for i in ${index_dir}/IPK/*.tsv.new; do
    echo $i
    
    OPT=$common_opt
    OPT="${OPT}&header=true"
    OPT="${OPT}&trim=true"
    OPT="${OPT}&fieldnames=id,obj_type,provider,species,obj_desc,src_url"
    
    ## Split the species
    OPT="${OPT}&f.species.split=true"
    OPT="${OPT}&f.species.separator=,"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'
    
done
echo; echo



## INDEX MIPS:
core=transPlant-MIPS

for i in ${index_dir}/MIPS/*.txt; do
    echo $i
    
    OPT=$common_opt
    OPT="${OPT}&fieldnames=id,obj_type,provider,species,obj_desc,src_url"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'
    
done
echo; echo



## INDEX PAS:
core=transPlant-PAS

for i in ${index_dir}/PAS/*.tab; do
    echo $i
    
    OPT=$common_opt
    OPT="${OPT}&header=true"
    OPT="${OPT}&fieldnames=id,obj_type,provider,species,obj_desc,src_url"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'
    
done
echo; echo



## INDEX UGRI:
core=transPlant-UGRI

for i in ${index_dir}/UGRI/*.csv; do
    echo $i
    
    OPT=$common_opt
    OPT="${OPT}&fieldnames=id,obj_type,provider,species,obj_desc,src_url"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'
    
done
echo; echo



echo DONE



## Finally, we have to stick at least some data into the 'hub' index,
## so that it reports it's fields correctly...

## We use something similar to the PAS data...

core=transPlant

for i in ${index_dir}/null_entry.tsv; do
    echo $i
    
    OPT=$common_opt
    OPT="${OPT}&header=true"
    OPT="${OPT}&fieldnames=id,obj_type,provider,species,obj_desc,src_url"
    
    ## Run it
    time \
        curl "${url}/${core}/update?${OPT}" --data-binary @"${i}" \
        -H 'Content-type:application/csv'
    
done
echo; echo





## Wuh?
set +e
set +u
